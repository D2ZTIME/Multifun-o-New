/* style.css */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

body {
  background-color: #f4f4f4;
  color: #333;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  transition: background-color 0.3s, color 0.3s;
}

header {
  text-align: center;
  margin-bottom: 30px;
}

h1 {
  font-size: 2rem;
  margin-bottom: 10px;
}

nav {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
}

nav button {
  padding: 10px 20px;
  border: none;
  background-color: #ddd;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s ease;
}

nav button.active,
nav button:hover {
  background-color: #007BFF;
  color: white;
}

main {
  width: 100%;
  max-width: 500px;
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  transition: background 0.3s, color 0.3s;
}

section {
  display: none;
}

section.active {
  display: block;
}

section h2 {
  margin-bottom: 20px;
  font-size: 1.5rem;
  text-align: center;
}

#digital-clock,
#stopwatch-display,
#timer-display,
#pomodoro-display {
  font-size: 3rem;
  text-align: center;
  margin-bottom: 20px;
  font-weight: bold;
}

input[type="time"],
input[type="number"] {
  padding: 10px;
  margin: 5px;
  width: calc(50% - 12px);
  font-size: 1rem;
  border: 1px solid #ccc;
  border-radius: 5px;
}

button {
  padding: 10px 15px;
  margin: 5px;
  border: none;
  background-color: #007BFF;
  color: white;
  border-radius: 5px;
  cursor: pointer;
  transition: opacity 0.2s;
}

button:hover {
  opacity: 0.9;
}

#alarm-status,
#weather-info {
  text-align: center;
  margin-top: 15px;
  font-size: 1rem;
  font-style: italic;
}

/* CronÃ´metro com fonte maior */
.stopwatch-container .stopwatch {
  font-size: 200%;
  text-align: center;
  font-weight: bold;
  margin-bottom: 20px;
}

/* Dark Mode */
@media (prefers-color-scheme: dark) {
  body {
    background-color: #1e1e1e;
    color: #f4f4f4;
  }

  main {
    background: #2b2b2b;
  }

  nav button {
    background-color: #444;
    color: #ddd;
  }

  nav button.active,
  nav button:hover {
    background-color: #2196F3;
    color: white;
  }

  input[type="time"],
  input[type="number"] {
    background: #3c3c3c;
    color: #fff;
    border: 1px solid #666;
  }

  button {
    background-color: #2196F3;
  }

  #alarm-status,
  #weather-info {
    color: #ccc;
  }
}

/* script.js */

// Tabs
const navButtons = document.querySelectorAll('nav button');
const sections = document.querySelectorAll('main section');

navButtons.forEach((button, index) => {
  button.addEventListener('click', () => {
    navButtons.forEach(btn => btn.classList.remove('active'));
    sections.forEach(sec => sec.classList.remove('active'));

    button.classList.add('active');
    sections[index].classList.add('active');
  });
});

// Digital Clock
function updateDigitalClock() {
  const now = new Date();
  const clock = document.getElementById('digital-clock');
  if (clock) clock.textContent = now.toLocaleTimeString();
}
setInterval(updateDigitalClock, 1000);
updateDigitalClock();

// Stopwatch
let stopwatchInterval;
let swMinutes = 0, swSeconds = 0, swMilliseconds = 0;

function updateStopwatchDisplay() {
  document.getElementById('sw-minutes').textContent = swMinutes.toString().padStart(2, '0');
  document.getElementById('sw-seconds').textContent = swSeconds.toString().padStart(2, '0');
  document.getElementById('sw-milliseconds').textContent = swMilliseconds.toString().padStart(2, '0');
}

document.getElementById('start-sw').addEventListener('click', () => {
  clearInterval(stopwatchInterval);
  stopwatchInterval = setInterval(() => {
    swMilliseconds++;
    if (swMilliseconds >= 100) {
      swMilliseconds = 0;
      swSeconds++;
    }
    if (swSeconds >= 60) {
      swSeconds = 0;
      swMinutes++;
    }
    updateStopwatchDisplay();
  }, 10);
});

document.getElementById('stop-sw').addEventListener('click', () => {
  clearInterval(stopwatchInterval);
});

document.getElementById('reset-sw').addEventListener('click', () => {
  clearInterval(stopwatchInterval);
  swMinutes = 0;
  swSeconds = 0;
  swMilliseconds = 0;
  updateStopwatchDisplay();
});

document.getElementById('lap-sw').addEventListener('click', () => {
  const lapTime = `${swMinutes.toString().padStart(2, '0')}:${swSeconds.toString().padStart(2, '0')}:${swMilliseconds.toString().padStart(2, '0')}`;
  const lapElement = document.createElement('div');
  lapElement.textContent = `Volta: ${lapTime}`;
  document.getElementById('laps-container').appendChild(lapElement);
});

updateStopwatchDisplay();
